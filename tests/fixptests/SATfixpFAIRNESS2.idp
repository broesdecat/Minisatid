Given:
	type X
	E(X,X) //edge van eerste NAAR tweede
	P(X)
	Start(X)
Find:
	Q(X) //waar als vanuit X alle paden P oneindig vaak waar maken
Declare:
	T(X)
	Z(X)
Satisfying:
//vanuit de start state moeten alle paden oneindig vaak P waar maken
	{
		Q(x) <- Start(x).
	}
	GFD[
		Q(x) <- T(x).
		LFD[			
			T(x) <- !y: ((E(x, y) & Z(y)) | T(y)).
			Z(x) <- E(x, y) & Q(y) & P(y).
		]
	]
Data:
	X = {1..6}
	E = {1,2;2,3;3,4;4,5;4,2;5,6;6,5;}
	P = {3}
	Start = {1}
